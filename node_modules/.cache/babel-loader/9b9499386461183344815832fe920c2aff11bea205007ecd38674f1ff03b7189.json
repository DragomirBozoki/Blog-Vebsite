{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bozok\\\\OneDrive\\\\Desktop\\\\MindLoopAI\\\\website\\\\src\\\\components\\\\LandingChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MessageCircle } from \"lucide-react\";\nimport faqData from \"./faqData\";\nimport * as use from \"@tensorflow-models/universal-sentence-encoder\"; // koristi Universal Sentence Encoder (lagan, open-source)\nimport { cosineSimilarity } from \"./cosine\"; // vidi dole objašnjenje\n\nimport * as tf from '@tensorflow/tfjs';\n\n// Obavezno ručno inicijalizuj backend:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntf.setBackend('webgl').then(() => {\n  console.log('Backend set to WebGL');\n});\nconst LandingChatbot = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: t(\"Hello! Ask me anything about AI Assistant or CopyBot, I can speak in English and Russian!\")\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [shake, setShake] = useState(false);\n  const [typingDots, setTypingDots] = useState(\"\");\n  const containerRef = useRef(null);\n  const [encoder, setEncoder] = useState(null);\n  const [faqEmbeddings, setFaqEmbeddings] = useState([]);\n  useEffect(() => {\n    const loadModelAndEmbeddings = async () => {\n      const model = await use.load();\n      setEncoder(model);\n      const embeddings = await Promise.all(faqData.map(faq => model.embed(faq.question).then(t => t.array())));\n      setFaqEmbeddings(embeddings.map(arr => arr[0]));\n    };\n    loadModelAndEmbeddings();\n  }, []);\n  useEffect(() => {\n    if (containerRef.current) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const findBestAnswer = async inputText => {\n    if (!encoder) return null;\n    const inputEmbeddingTensor = await encoder.embed(inputText);\n    const inputEmbedding = (await inputEmbeddingTensor.array())[0];\n    let bestScore = -1;\n    let bestAnswer = null;\n    faqEmbeddings.forEach((faqEmbedding, index) => {\n      const score = cosineSimilarity(inputEmbedding, faqEmbedding);\n      if (score > bestScore) {\n        bestScore = score;\n        bestAnswer = faqData[index].answer;\n      }\n    });\n\n    // OVDE: ako najbolji skor nije dovoljno dobar, vrati null\n    if (bestScore < 0.45) {\n      return null; // fallback\n    }\n    return bestAnswer;\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    // Typing animation\n    setMessages(prev => [...prev, {\n      sender: \"bot\",\n      text: \"...\"\n    }]);\n    setTypingDots(\".\");\n    const typingInterval = setInterval(() => {\n      setTypingDots(prev => prev.length >= 3 ? \".\" : prev + \".\");\n    }, 400);\n    const bestAnswer = await findBestAnswer(input);\n    setTimeout(() => {\n      clearInterval(typingInterval);\n      setMessages(prev => {\n        const newMessages = prev.filter((msg, idx) => !(idx === prev.length - 1 && msg.text === \"...\"));\n        if (bestAnswer) {\n          return [...newMessages, {\n            sender: \"bot\",\n            text: bestAnswer\n          }];\n        } else {\n          return [...newMessages, {\n            sender: \"bot\",\n            text: t(\"I didnt understand, contact our team or ask me something else!\")\n          }];\n        }\n      });\n      setShake(true);\n      setTimeout(() => setShake(false), 600);\n    }, 2000);\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n  if (!open) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-6 right-6 z-50 cursor-pointer animate-pulse\",\n      onClick: () => setOpen(true),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-cyan-600 hover:bg-cyan-700 p-4 rounded-full shadow-lg text-white ${shake ? \"animate-shake\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(MessageCircle, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-6 right-6 z-50 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 text-white p-4 rounded-xl shadow-xl w-80 text-sm relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpen(false),\n        className: \"absolute top-2 right-2 text-gray-400 hover:text-white\",\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold mb-2 text-cyan-400\",\n        children: \"\\uD83D\\uDCAC MindLoop AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"space-y-2 max-h-80 overflow-y-auto scroll-smooth pr-1\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${msg.sender === \"user\" ? \"justify-end\" : \"justify-start\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `rounded-lg px-3 py-2 max-w-[70%] ${msg.sender === \"user\" ? \"bg-cyan-600 text-white\" : \"bg-white/10 text-white\"}`,\n            children: msg.text === \"...\" ? typingDots : msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 bg-gray-700 text-white rounded-xl px-4 py-2 text-sm outline-none\",\n          placeholder: t(\"inputPlaceholder\"),\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"bg-cyan-600 hover:bg-cyan-700 text-white px-3 py-2 rounded-xl text-sm\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(LandingChatbot, \"miE8xSJWhI5d1k4eoeHb0Vy8Ifk=\", false, function () {\n  return [useTranslation];\n});\n_c = LandingChatbot;\nexport default LandingChatbot;\nvar _c;\n$RefreshReg$(_c, \"LandingChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useTranslation","MessageCircle","faqData","use","cosineSimilarity","tf","jsxDEV","_jsxDEV","setBackend","then","console","log","LandingChatbot","_s","t","messages","setMessages","sender","text","input","setInput","open","setOpen","shake","setShake","typingDots","setTypingDots","containerRef","encoder","setEncoder","faqEmbeddings","setFaqEmbeddings","loadModelAndEmbeddings","model","load","embeddings","Promise","all","map","faq","embed","question","array","arr","current","scrollTop","scrollHeight","findBestAnswer","inputText","inputEmbeddingTensor","inputEmbedding","bestScore","bestAnswer","forEach","faqEmbedding","index","score","answer","handleSend","trim","userMessage","prev","typingInterval","setInterval","length","setTimeout","clearInterval","newMessages","filter","msg","idx","handleKeyDown","e","key","className","onClick","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","i","type","placeholder","value","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/bozok/OneDrive/Desktop/MindLoopAI/website/src/components/LandingChatbot.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { MessageCircle } from \"lucide-react\";\r\nimport faqData from \"./faqData\";\r\nimport * as use from \"@tensorflow-models/universal-sentence-encoder\"; // koristi Universal Sentence Encoder (lagan, open-source)\r\nimport { cosineSimilarity } from \"./cosine\"; // vidi dole objašnjenje\r\n\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\n// Obavezno ručno inicijalizuj backend:\r\ntf.setBackend('webgl').then(() => {\r\n  console.log('Backend set to WebGL');\r\n});\r\n\r\n\r\nconst LandingChatbot = () => {\r\n  const { t } = useTranslation();\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: t(\"Hello! Ask me anything about AI Assistant or CopyBot, I can speak in English and Russian!\") }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [shake, setShake] = useState(false);\r\n  const [typingDots, setTypingDots] = useState(\"\");\r\n  const containerRef = useRef(null);\r\n  const [encoder, setEncoder] = useState(null);\r\n  const [faqEmbeddings, setFaqEmbeddings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadModelAndEmbeddings = async () => {\r\n      const model = await use.load();\r\n      setEncoder(model);\r\n\r\n      const embeddings = await Promise.all(\r\n        faqData.map(faq => model.embed(faq.question).then(t => t.array()))\r\n      );\r\n      setFaqEmbeddings(embeddings.map(arr => arr[0]));\r\n    };\r\n\r\n    loadModelAndEmbeddings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const findBestAnswer = async (inputText) => {\r\n    if (!encoder) return null;\r\n  \r\n    const inputEmbeddingTensor = await encoder.embed(inputText);\r\n    const inputEmbedding = (await inputEmbeddingTensor.array())[0];\r\n  \r\n    let bestScore = -1;\r\n    let bestAnswer = null;\r\n  \r\n    faqEmbeddings.forEach((faqEmbedding, index) => {\r\n      const score = cosineSimilarity(inputEmbedding, faqEmbedding);\r\n      if (score > bestScore) {\r\n        bestScore = score;\r\n        bestAnswer = faqData[index].answer;\r\n      }\r\n    });\r\n  \r\n    // OVDE: ako najbolji skor nije dovoljno dobar, vrati null\r\n    if (bestScore < 0.45) {\r\n      return null; // fallback\r\n    }\r\n  \r\n    return bestAnswer;\r\n  };\r\n  \r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    // Typing animation\r\n    setMessages(prev => [...prev, { sender: \"bot\", text: \"...\" }]);\r\n    setTypingDots(\".\");\r\n\r\n    const typingInterval = setInterval(() => {\r\n      setTypingDots(prev => (prev.length >= 3 ? \".\" : prev + \".\"));\r\n    }, 400);\r\n\r\n    const bestAnswer = await findBestAnswer(input);\r\n\r\n    setTimeout(() => {\r\n      clearInterval(typingInterval);\r\n      setMessages(prev => {\r\n        const newMessages = prev.filter((msg, idx) => !(idx === prev.length - 1 && msg.text === \"...\"));\r\n        if (bestAnswer) {\r\n          return [...newMessages, { sender: \"bot\", text: bestAnswer }];\r\n        } else {\r\n          return [...newMessages, { sender: \"bot\", text: t(\"I didnt understand, contact our team or ask me something else!\") }];\r\n        }\r\n      });\r\n      setShake(true);\r\n      setTimeout(() => setShake(false), 600);\r\n    }, 2000);\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  if (!open) {\r\n    return (\r\n      <div className=\"fixed bottom-6 right-6 z-50 cursor-pointer animate-pulse\" onClick={() => setOpen(true)}>\r\n        <div className={`bg-cyan-600 hover:bg-cyan-700 p-4 rounded-full shadow-lg text-white ${shake ? \"animate-shake\" : \"\"}`}>\r\n          <MessageCircle size={24} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed bottom-6 right-6 z-50 font-sans\">\r\n      <div className=\"bg-gray-900 text-white p-4 rounded-xl shadow-xl w-80 text-sm relative\">\r\n        <button onClick={() => setOpen(false)} className=\"absolute top-2 right-2 text-gray-400 hover:text-white\">\r\n          ✖\r\n        </button>\r\n\r\n        <div className=\"font-bold mb-2 text-cyan-400\">💬 MindLoop AI</div>\r\n\r\n        <div ref={containerRef} className=\"space-y-2 max-h-80 overflow-y-auto scroll-smooth pr-1\">\r\n          {messages.map((msg, i) => (\r\n            <div key={i} className={`flex ${msg.sender === \"user\" ? \"justify-end\" : \"justify-start\"}`}>\r\n              <div className={`rounded-lg px-3 py-2 max-w-[70%] ${\r\n                msg.sender === \"user\" ? \"bg-cyan-600 text-white\" : \"bg-white/10 text-white\"\r\n              }`}>\r\n                {msg.text === \"...\" ? typingDots : msg.text}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-2 mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 bg-gray-700 text-white rounded-xl px-4 py-2 text-sm outline-none\"\r\n            placeholder={t(\"inputPlaceholder\")}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n          <button\r\n            onClick={handleSend}\r\n            className=\"bg-cyan-600 hover:bg-cyan-700 text-white px-3 py-2 rounded-xl text-sm\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}